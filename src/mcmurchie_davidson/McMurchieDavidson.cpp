/* This file was autogenerated on 2023-06-11T16:57 DO NOT EDIT! */

#include "McMurchieDavidson.hpp"

#include <stdexcept>
#include <string>
#include <vector>

#include "Utilities.hpp"

namespace mcmurchie_davidson {
auto
boys_function(size_t order, const std::vector<double>& xs) -> std::vector<double>
{
    switch (order)
    {
        case 0:
            return boys_function_0(xs);
        case 1:
            return cpu::boys_function<1>(xs);
        case 2:
            return cpu::boys_function<2>(xs);
        case 3:
            return cpu::boys_function<3>(xs);
        case 4:
            return cpu::boys_function<4>(xs);
        case 5:
            return cpu::boys_function<5>(xs);
        case 6:
            return cpu::boys_function<6>(xs);
        case 7:
            return cpu::boys_function<7>(xs);
        case 8:
            return cpu::boys_function<8>(xs);
        case 9:
            return cpu::boys_function<9>(xs);
        case 10:
            return cpu::boys_function<10>(xs);
        case 11:
            return cpu::boys_function<11>(xs);
        case 12:
            return cpu::boys_function<12>(xs);
        case 13:
            return cpu::boys_function<13>(xs);
        case 14:
            return cpu::boys_function<14>(xs);
        case 15:
            return cpu::boys_function<15>(xs);
        case 16:
            return cpu::boys_function<16>(xs);
        case 17:
            return cpu::boys_function<17>(xs);
        case 18:
            return cpu::boys_function<18>(xs);
        case 19:
            return cpu::boys_function<19>(xs);
        case 20:
            return cpu::boys_function<20>(xs);
        default:
            throw std::invalid_argument("Maximum supported order is 20. Requested order is " + std::to_string(order));
    }
}
}  // namespace mcmurchie_davidson
